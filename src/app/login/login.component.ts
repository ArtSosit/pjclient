import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';
import { environment } from '@env/environment';
import { JwtHelperService } from '@auth0/angular-jwt';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  email: string = '';
  password: string = '';
  loginError: string | null = null;

  private apiUrl = `${environment.apiBaseUrl}/api/auth/login`; // URL ‡∏Ç‡∏≠‡∏á API ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ

  constructor(private http: HttpClient, private router: Router) { }

  user = {
    email: '',
    password: ''
  }

  token: any;

  jwtHelper = new JwtHelperService();

  ngOnInit() {
    this.token = localStorage.getItem('token');
    if (!this.token || this.jwtHelper.isTokenExpired(this.token)) {
      this.router.navigate(['/login']);
    } else {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ token ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      this.router.navigate(['/main/menu']);
    }
  }
  checkUserRole() {
    const token = localStorage.getItem('token');
    if (token) {
      const type = this.jwtHelper.decodeToken(token).type;
      return type;  // 'store' or 'kitchen'
    }
    return null;
  }

  onSubmit() {
    if (!this.user.email || !this.user.password) {
      this.loginError = 'Please enter both email and password.';
      return;
    }

    this.http.post(this.apiUrl, this.user).subscribe(
      (response: any) => {
        console.log('Login response:', response.token);

        if (response && response.token) {
          console.log('‚úÖ Login successful:', response);
          alert(response.message)
          // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö Token ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö Password
          localStorage.setItem('token', response.token);


          // üîÄ Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
          if (response && response.token) {
            alert(response.message)
            // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö Token ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö Password
            localStorage.setItem('token', response.token);
            const userType = this.checkUserRole();
            if (userType === 'kitchen') {
              this.router.navigate(['/main/order-list']);
            } else {
              this.router.navigate(['/main/menu']);
            }
          }
        } else {
          alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
          this.loginError = 'Invalid credentials. Please try again.';
        }
      },
      (error) => {
        console.error('‚ùå Login error:', error);
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        this.loginError = 'An error occurred during login. Please try again later.';
      }
    );
  }

}
